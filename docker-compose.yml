# docker-compose.yml
version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: leader_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432" # пробрасывай только если нужен доступ с хоста
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build: .
    container_name: leader_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.production        # <-- ТВОЙ .env.production с DATABASE_URL и прочим
    ports:
      - "3000:3000"
    # если нужен доступ только внутри сети, убери ports и оставь network (ниже)

  # pgadmin (опционально для отладки, не включай в прод)
  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: leader_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:extecick@yandex.ru}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:Ovogup73_}
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
